server.host: "{{ kibana.ip_address }}"
# We bind to the port defined in the inventory. By default, it is port 5601
server.port: "{{ kibana.ports[0] }}"

{% if server_ssl_cert_format == "pem" %}
server.ssl.certificate: /usr/share/kibana/config/certs/ssl.crt
server.ssl.key: /usr/share/kibana/config/certs/ssl.key
{% else %}
server.ssl.keystore.path: /usr/share/kibana/config/certs/ssl.p12
server.ssl.keystore.password: "{{ server_ssl_keystore_password }}"
{% endif %}

server.ssl.certificateAuthorities: ["/usr/share/kibana/config/certs/kibana_signing_ca.crt"]
server.ssl.enabled: true
server.publicBaseUrl: "https://{{kibana_fqdn}}"

elasticsearch.hosts:
{% for host in groups['elastic_hosts'] %}
  - https://{{ hostvars[host]['service_ip'] }}:9200
{% endfor %}
# to accept internal CA certificate that issued the cluster certificates
elasticsearch.ssl.certificateAuthorities: ["/usr/share/kibana/config/certs/elastic_ca.crt"]
elasticsearch.ssl.verificationMode: "{{ elasticsearch_ssl_verification_mode }}"
elasticsearch.username: kibana_system
elasticsearch.password: "{{ kibana_system_password }}"
# millisec
elasticsearch.requestTimeout: 120000
elasticsearch.shardTimeout: 60000

telemetry.enabled: false

{%if kibana_version < "8.0.0" %}
xpack.security.enabled: true
{% endif %}
xpack.security.encryptionKey: "{{kibana_security_encryptionkey}}"
xpack.encryptedSavedObjects.encryptionKey: '{{kibana_savedobjects_encryptionkey}}'
xpack.reporting.encryptionKey: '{{kibana_reporting_encryptionkey}}'

{%if kibana_version < "8.0.0" %}
xpack.monitoring.enabled: true
{% endif %}
xpack.monitoring.kibana.collection.enabled: false # legacy

# use Cgroup details
# only enable this when you migrated to new podman stack
monitoring.ui.container.elasticsearch.enabled: true
monitoring.ui.container.logstash.enabled: true

logging:
  appenders:
    file:
      type: file
      fileName: /var/log/kibana/kibana.json
      layout:
        type: json
  root:
    appenders: [default, file]
