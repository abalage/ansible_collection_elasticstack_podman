---
- name: Deploy Kibana in a pod
  vars:
    pod_name: "{{ kibana_pod_name }}.{{ inventory_hostname_short }}.kibana_{{ kibana.instance_name }}"
  block:
    - name: Create pod for kibana
      containers.podman.podman_pod:
        name: "{{ pod_name }}"
        hostname: "{{ inventory_hostname_short }}.kibana_{{ kibana.instance_name }}"
        state: "{{ state }}"
        recreate: "{{ recreate }}"
        network: "{{ kibana_pod_network }}"
      when: kibana_pod_network != "bridge"

    - name: Create pod for kibana
      containers.podman.podman_pod:
        name: "{{ pod_name }}"
        hostname: "{{ inventory_hostname_short }}.kibana_{{ kibana.instance_name }}"
        state: "{{ state }}"
        recreate: "{{ recreate }}"
        network: "{{ kibana_pod_network }}"
        publish: "{{ kibana.ports }}"
      when: kibana_pod_network == "bridge"

    - name: Run Kibana container
      containers.podman.podman_container:
        name: "{{ inventory_hostname_short }}.kibana_{{ kibana.instance_name }}"
        pod: "{{ pod_name }}"
        image: "{{ kibana_image }}:{{ kibana_version }}"
        state: "{{ state }}"
        recreate: "{{ recreate }}"
        network: "{{ kibana_pod_network }}"
        # # by default json loggin is used plus filebeat
        # # log driver k8s-file
        # log_driver: k8s-file
        # log_opt:
        #   path: "{{ kibana_data }}/logs/kibana-container.log"
        #   max_size: 300mb
        # # log driver to journald (where syslog-ng can pick-up)
        # log_driver: journald
        # log_opt:
        #   tag=kibana|{{ '{{' }}.ImageName{{ '}}' }}|podman
        label:
          process=kibana
          traefik.enable=true
          traefik.http.routers.kibana-www-router.entrypoints="websecure"
          traefik.http.routers.kibana-www-router.rule=Host(`{{ kibana_fqdn }}`)
          traefik.http.routers.kibana-www-router.tls=true
          traefik.http.routers.kibana-www-router.service=kibana-www-service
          traefik.http.services.kibana-www-service.loadbalancer.server.scheme=https
          traefik.http.services.kibana-www-service.loadbalancer.server.port={{ kibana.ports[0] }}
        expose: "{{ kibana.ports }}"
        memory: "{{ kibana.memory_limit }}"
        cpus: "{{ kibana.cpu_limit }}"
        volume:
          - "{{ kibana_data }}/logs:/var/log/kibana:z"
          - "{{ kibana_config }}/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,z"
          - "{{ kibana_config }}/certs:/usr/share/kibana/config/certs:ro,z"
      register: result
      until: result is success
      retries: 3
      delay: 5
      environment: "{{ proxy_env }}"

    - name: Open up firewalld ports
      ansible.posix.firewalld:
        port: "{{ item }}/tcp"
        permanent: true
        immediate: true
        state: enabled
        zone: "{{ firewalld_zone }}"
      loop: "{{ kibana.ports }}"
      when:
        - kibana_pod_network == "host"
        - firewalld_enabled | bool

    - name: Hand over pod and container mgmt to systemd
      vars:
        container_name: "{{ pod_name }}"
        type: pod
      ansible.builtin.import_role:
        name: podman_systemd_simple
