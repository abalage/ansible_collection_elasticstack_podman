---
- name: Deploy Filebeat in a pod
  vars:
    pod_name: "{{ filebeat_pod_name }}.{{ inventory_hostname_short }}.filebeat_{{ filebeat.instance_name }}"
  block:
    - name: Create pod for filebeat
      containers.podman.podman_pod:
        name: "{{ pod_name }}"
        hostname: "{{ inventory_hostname_short }}.filebeat_{{ filebeat.instance_name }}"
        state: "{{ state }}"
        recreate: "{{ recreate }}"
        network: "{{ filebeat_pod_network }}"
      when: filebeat_pod_network != "bridge"

    - name: Create pod for filebeat
      containers.podman.podman_pod:
        name: "{{ pod_name }}"
        hostname: "{{ inventory_hostname_short }}.filebeat_{{ filebeat.instance_name }}"
        state: "{{ state }}"
        recreate: "{{ recreate }}"
        network: "{{ filebeat_pod_network }}"
        publish: "{{ filebeat.ports }}"
      when: filebeat_pod_network == "bridge"

    - name: Run Filebeat-setup container to perform initial setup. It will exit when it's done.
      containers.podman.podman_container:
        name: "{{ inventory_hostname_short }}.filebeat_{{ filebeat.instance_name }}"
        pod: "{{ pod_name }}"
        image: "{{ filebeat_image }}:{{ filebeat_version }}"
        command: setup -e --index-management --pipelines --dashboards
        state: "{{ state }}"
        user: root
        recreate: "{{ recreate }}"
        network: "{{ filebeat_pod_network }}"
        # # by default json loggin is used plus filebeat
        # # log driver k8s-file
        # log_driver: k8s-file
        # log_opt:
        #   path: "{{ filebeat_data }}/logs/filebeat-container.log"
        #   max_size: 300mb
        # # log driver to journald (where syslog-ng can pick-up)
        # log_driver: journald
        # log_opt:
        #   tag=filebeat|{{ '{{' }}.ImageName{{ '}}' }}|podman
        label:
          process: filebeat-setup
        expose: "{{ filebeat.ports }}"
        memory: "{{ filebeat.memory_limit }}"
        cpus: "{{ filebeat.cpu_limit }}"
        env:
          TZ: "{{ timezone }}"
          NO_PROXY: "{{ no_proxy }}"
        volume:
          - "{{ filebeat_config }}/certs/http_ca.crt:/usr/share/filebeat/config/http_ca.crt:ro,z"
          - "{{ filebeat_config }}/certs/kibana_signing_ca.crt:/usr/share/filebeat/config/kibana_signing_ca.crt:ro,z"
          - "{{ filebeat_config }}/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:z"
          - "{{ filebeat_data }}/logs:/var/log/filebeat:z"
      run_once: true
      register: result
      until: result is success
      retries: 3
      delay: 5
      environment: "{{ proxy_env }}"

    - name: Run Filebeat container
      containers.podman.podman_container:
        name: "{{ inventory_hostname_short }}.filebeat_{{ filebeat.instance_name }}"
        pod: "{{ pod_name }}"
        image: "{{ filebeat_image }}:{{ filebeat_version }}"
        state: "{{ state }}"
        user: root
        recreate: "{{ recreate }}"
        network: "{{ filebeat_pod_network }}"
        # # by default json loggin is used plus filebeat
        # # log driver k8s-file
        # log_driver: k8s-file
        # log_opt:
        #   path: "{{ filebeat_data }}/logs/filebeat-container.log"
        #   max_size: 300mb
        # # log driver to journald (where syslog-ng can pick-up)
        # log_driver: journald
        # log_opt:
        #   tag=filebeat|{{ '{{' }}.ImageName{{ '}}' }}|podman
        label:
          process=filebeat
        expose: "{{ filebeat.ports }}"
        memory: "{{ filebeat.memory_limit }}"
        cpus: "{{ filebeat.cpu_limit }}"
        env:
          TZ: "{{ timezone }}"
        volume:
          - "{{ filebeat_config }}/certs/http_ca.crt:/usr/share/filebeat/config/http_ca.crt:ro,z"
          - "{{ filebeat_config }}/certs/kibana_signing_ca.crt:/usr/share/filebeat/config/kibana_signing_ca.crt:ro,z"
          - "{{ filebeat_config }}/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:z"
          - "{{ filebeat_data }}/logs:/var/log/filebeat:z"
          - "{{ elastic_data }}/logs:/var/log/elasticsearch:ro,z"
          - "{{ logstash_data }}/logs:/var/log/logstash:ro,z"
          - "{{ kibana_data }}/logs:/var/log/kibana:ro,z"
      register: result
      until: result is success
      retries: 3
      delay: 5
      environment: "{{ proxy_env }}"

    - name: Open up firewalld ports
      ansible.posix.firewalld:
        port: "{{ item }}/tcp"
        permanent: true
        immediate: true
        state: enabled
        zone: "{{ firewalld_zone }}"
      loop: "{{ filebeat.ports }}"
      when:
        - filebeat_pod_network == "host"
        - firewalld_enabled | bool

    - name: Hand over pod and container mgmt to systemd
      vars:
        container_name: "{{ pod_name }}"
        type: pod
      ansible.builtin.import_role:
        name: podman_systemd_simple
