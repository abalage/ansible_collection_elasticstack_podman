---
# tasks file for metricbeat
- name: Deploy Metricbeat in a pod
  vars:
    pod_name: "{{ metricbeat_pod_name }}.{{ inventory_hostname_short }}.metricbeat_{{ metricbeat.instance_name }}"
  block:
    - name: Create pod for metricbeat
      containers.podman.podman_pod:
        name: "{{ pod_name }}"
        hostname: "{{ inventory_hostname_short }}.metricbeat_{{ metricbeat.instance_name }}"
        state: "{{ state }}"
        recreate: "{{ recreate }}"
        network: "{{ metricbeat_pod_network }}"
      when: metricbeat_pod_network != "bridge"

    - name: Create pod for metricbeat
      containers.podman.podman_pod:
        name: "{{ pod_name }}"
        hostname: "{{ inventory_hostname_short }}.metricbeat_{{ metricbeat.instance_name }}"
        state: "{{ state }}"
        recreate: "{{ recreate }}"
        network: "{{ metricbeat_pod_network }}"
        publish: "{{ metricbeat.ports }}"
      when: metricbeat_pod_network == "bridge"

    - name: Run Metricbeat container - setup
      containers.podman.podman_container:
        name: "{{ inventory_hostname_short }}.metricbeat_{{ metricbeat.instance_name }}"
        pod: "{{ pod_name }}"
        image: "{{ metricbeat_image }}:{{ metricbeat_version }}"
        state: "{{ state }}"
        recreate: "{{ recreate }}"
        network: "{{ metricbeat_pod_network }}"
        label:
          process=metricbeat
        memory: "{{ metricbeat.memory_limit }}"
        cpus: "{{ metricbeat.cpu_limit }}"
        env:
          TZ: "{{ timezone }}"
          ELASTICSEARCH_HOSTS: "{{ metricbeat.monitoring_cluster_url }}"
          ELASTICSEARCH_USERNAME: "{{ metricbeat.monitoring_write_user_name }}"
          ELASTICSEARCH_PASSWORD: "{{ metricbeat.monitoring_write_user_pass }}"
        volume:
          - "{{ metricbeat_config }}/config/metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml:z"
          - "{{ metricbeat_config }}/certs/transport_ca.crt:/usr/share/metricbeat/transport_ca.crt:ro,z"
        command: setup -e --index-management --pipelines --dashboards
      register: result
      until: result is success
      retries: 3
      delay: 5
      run_once: true
      environment: "{{ proxy_env }}"

    - name: Run Metricbeat container
      containers.podman.podman_container:
        name: "{{ inventory_hostname_short }}.metricbeat_{{ metricbeat.instance_name }}"
        pod: "{{ pod_name }}"
        image: "{{ metricbeat_image }}:{{ metricbeat_version }}"
        state: "{{ state }}"
        recreate: "{{ recreate }}"
        network: "{{ metricbeat_pod_network }}"
        label:
          process=metricbeat
        expose: "{{ metricbeat.ports }}"
        memory: "{{ metricbeat.memory_limit }}"
        cpus: "{{ metricbeat.cpu_limit }}"
        env:
          TZ: "{{ timezone }}"
          ELASTICSEARCH_HOSTS: "{{ metricbeat.monitoring_cluster_url }}"
          ELASTICSEARCH_USERNAME: "{{ metricbeat.monitoring_write_user_name }}"
          ELASTICSEARCH_PASSWORD: "{{ metricbeat.monitoring_write_user_pass }}"
        user: root
        volume:
          - "{{ metricbeat_config }}/config/metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml:z"
          - "{{ metricbeat_config }}/certs/transport_ca.crt:/usr/share/metricbeat/transport_ca.crt:ro,z"
          - "{{ metricbeat_config }}/certs/kibana_signing_ca.crt:/usr/share/metricbeat/kibana_signing_ca.crt:ro,z"
      register: result
      until: result is success
      retries: 3
      delay: 5

    - name: Open up firewalld ports
      ansible.posix.firewalld:
        port: "{{ item }}/tcp"
        permanent: true
        immediate: true
        state: enabled
        zone: "{{ firewalld_zone }}"
      loop: "{{ metricbeat.ports }}"
      when:
        - metricbeat_pod_network == "host"
        - firewalld_enabled | bool

    - name: Hand over pod and container mgmt to systemd
      vars:
        container_name: "{{ pod_name }}"
        type: pod
      ansible.builtin.import_role:
        name: podman_systemd_simple
